
namespace DeployClient;

public class FileRemoteSelectDialog : ALittle.EventDispatcher
{
	private ALittle.Dialog _dialog;

    private FileRemoteSelectLayout _layout;

    // 释放
	public fun Shutdown()
	{
        if (this._layout != null)
        	this._layout.Release();

		if (this._dialog != null)
		{
			A_LayerManager.RemoveFromModal(this._dialog);
            this._dialog = null;
        }
    }

    // 关闭对话框
	public fun HideDialog()
	{
        if (this._layout != null)
        	this._layout.Release();

		if (this._dialog != null) this._dialog.visible = false;
	}

    // 显示对话框
	public fun ShowDialog()
	{
        if (this._layout != null)
        	this._layout.Release();

		this.CreateDialog();
		this._dialog.visible = true;
	}

    // 创建对话框
	private fun CreateDialog()
	{
        // 创建模态提示对话框，并添加到模态层
		if (this._dialog == null)
		{
			this._dialog = g_Control.CreateControl{ALittle.Dialog}("file_remote_select_dialog", this);
			A_LayerManager.AddToModal(this._dialog);
            this._dialog.close_callback = bind(this.HandleDialogClose, this);

            this._layout.Init(null);
		}
    }

    // 获取基础路径
    public get base_path() : string
    {
        if (this._layout == null) return null;
        return this._layout.base_path;
    }

    // 显示
	public await fun ShowSelect() : string
	{
        var msg = new DeployServer.QShowCurPath();
        var error, rsp = DeployServer.HandleShowCurPath(g_DPLWebLoginManager.msg_client, msg);
        if (error == null)
        {
            var index = ALittle.String_Find(rsp.path, ":");
            if (index != null) this.SetBasePath(ALittle.String_Sub(rsp.path, 1, index));
            else this.SetBasePath(rsp.path);
        }

		this.ShowDialog();
        var result = this._layout.ShowSelect();
        this._dialog.visible = false;
        return result;
    }

    private fun HandleDialogClose() : bool
    {
        if (this._layout != null)
        	this._layout.Release();
        return true;
    }

	// base_path 为根路径，尾部不要带 /
	// rel_path 初始化相对于base_path的路径，尾部不要带 /
	private fun SetPath(string base_path, string rel_path) : bool
	{
        this.CreateDialog();
        return this._layout.SetPath(base_path, rel_path);
	}

	public fun SetBasePath(string base_path) : bool
	{
		if (this.base_path == base_path) return true;
		return this.SetPath(base_path, "");
    }

    public fun Refresh()
    {
        if (this._layout != null)
    		this._layout.Refresh();
    }
}

protected var g_FileRemoteSelectDialog = new FileRemoteSelectDialog();